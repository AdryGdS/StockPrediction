# -*- coding: utf-8 -*-
"""Stock Market.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tcVKYql3BrIcOwaKgm5e2HBthF8nyFkU
"""

import pandas as pd

df = pd.read_csv('/content/sample_data/GSPC.csv')
df.head()

df = df.drop('Date', axis = 1)

df[-2::]

amanha = df[-1::]
amanha

#amanha df[-10::]
#amanha.to_csv('/content/sample_data/futuro.csv', index=False)

base = df.drop(df[-1::].index, axis = 0)
base.tail()

#base = df.drop(df[-10::].index, axis = 0)
#base.to_csv('/content/sample_data/hoje.csv', index=False)

"""Até aqui foi realizado tratamento de dados, removendo a última linha (que seria hoje) para realizar a prediçao de amanha."""

base['target'] = base['Close'][1:len(base)].reset_index(drop=True)
base.tail()

prev = base[-1::].drop('target', axis = 1)
prev

treino = base.drop(base[-1::].index, axis = 0)
treino.tail()

treino.loc[treino['target'] > treino['Close'], 'target'] = 1
treino.tail()

#Exibe 1 onde o valor de target for maior que o fechamento da açao, o que significa que o dia seguinde teria aumento

treino.loc[treino['target'] != 1, 'target'] = 0
treino.tail()

#Confere se o valor é diferente de 1, o que significa que o valor de fechamento ficou abaixo do objetivo (Target)

y = treino['target']
x = treino.drop('target', axis = 1)

from sklearn.model_selection import train_test_split
x_treino, x_teste, y_treino, y_teste = train_test_split(x, y, test_size = 0.3)

from sklearn.ensemble import ExtraTreesClassifier
modelo = ExtraTreesClassifier()
modelo.fit(x_treino, y_treino)

resultado = modelo.score(x_teste, y_teste)
print("Acurácia:", resultado)

#30% para teste, 70% para treino
#Acurácia de 0.5, é um valor bem ruim

print(resultado)

prev

modelo.predict(prev)

prev['target'] = modelo.predict(prev)
prev

amanha

base.tail()

#base = base.append(amanha, sort=True)
base = pd.concat([base, amanha], ignore_index=True, sort=True)
base.tail()